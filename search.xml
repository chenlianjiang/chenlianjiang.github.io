<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[常用技术网站]]></title>
      <url>%2F2017%2F10%2F10%2F%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF%E7%BD%91%E7%AB%99%2F</url>
      <content type="text"><![CDATA[开发者头条 程序员分享平台 | 程序员必装的App | 技术极客的头条新闻 掘金 掘金是一款面向互联网技术人的内容社区，是给开发者用的 Hacker News，给设计师用的 Designer News，和给产品经理用的 Medium。掘金的技术文章由稀土上聚集的技术大牛和极客共同编辑为你筛选出最优质的干货，其中包括：Android、iOS、前端、后端等方面的内容。用户每天都可以在这里找到技术世界的头条内容。与此同时，掘金内还有沸点、掘金翻译计划、线下活动、专栏文章等内容。即使你是 GitHub、StackOverflow、开源中国的用户，我们相信你也可以在这里有所收获。 伯乐在线 做最专业的IT互联网职业社区。 CSDN.NET 全球最大中文 IT 社区，为 IT 专业技术人员提供最全面的信息传播和服务平台]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[正则表达式]]></title>
      <url>%2F2017%2F04%2F24%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
      <content type="text"><![CDATA[入门进阶参考语言相关PHPPHP基础系列之正则表达式(一) https://segmentfault.com/a/1190000009002895?utm_source=tuicool&amp;utm_medium=referral]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[HTTP协议]]></title>
      <url>%2F2017%2F04%2F24%2FHTTP%E5%8D%8F%E8%AE%AE%2F</url>
      <content type="text"><![CDATA[Go HTTP Redirect 的知识点总结http://colobu.com/2017/04/19/go-http-redirect/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.ioHTTP 笔记（一）http://www.cnblogs.com/52fhy/p/6426569.html]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[关于Node.js]]></title>
      <url>%2F2017%2F04%2F24%2F%E5%85%B3%E4%BA%8ENode-js%2F</url>
      <content type="text"><![CDATA[2017，我们来聊聊 Node.js]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[面试经验]]></title>
      <url>%2F2017%2F04%2F24%2F%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%2F</url>
      <content type="text"><![CDATA[面试过程中提问什么目前您的团队面临的最大挑战是什么？公司和团队主要方向团队的定位员工的成长与晋升 参考资料开发者面试指南 面试过程中提问什么 求职网站拉勾网BOSS直聘前程无忧智联招聘中国海峡人才网猎聘网]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PHP注意集锦]]></title>
      <url>%2F2017%2F04%2F18%2FPHP%E6%B3%A8%E6%84%8F%E9%9B%86%E9%94%A6%2F</url>
      <content type="text"><![CDATA[为什么in_array(0, [‘a’, ‘b’, ‘c’])返回true 在PHP中，数据会自动转换类型后再进行比较。 PHP 命令行下的世界 PHP7 中我们应该学习会用的新特性]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何提高收入]]></title>
      <url>%2F2017%2F04%2F18%2F%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E6%94%B6%E5%85%A5%2F</url>
      <content type="text"><![CDATA[时间对我们来说，是最公平的，每个人一天都只有24个小时，那么我们怎么用更少的时间换取更多的价值？其实时间可以从三个角度来换取更多的收入，那就是： 1.把每一份时间卖出得更贵这也是我们最执着的一种做法。我们拼命地读书考大学，上完大学还要参加各种技能培训班，我们用N多技能来武装自己，不过是为了把自己卖出个好价钱。这种模式不是不好，但一般行业都有这个行业的天花板。 比如，在iOS开发这条道路上，能走到技术金字塔顶端的人少之又少，到目前为止，也只有少量的人能称为技术大牛。比如猿题库的唐巧，滴滴的孙源，日本的喵神。我想更多的人可能是像我这样的，都是普通人。三年五年的经验达到熟练没问题，但是再往上呢？这个天花板你能突破上去吗？我想很多工作几年的人都有这种感触，工作年限上去了，但是技术上不去，职位上不去，没有任何机遇可言，如果我们只是继续拿着死工资，熬工龄，我们还能熬多久？ 对于技术或产品狗来说，一般年薪能到个五十万，基本也就到顶了。你想想你的每一分时间最多能卖出多少钱？卖出的价格到底还是有限的。 那来看看第二点，时间还可以怎么卖？ 2. 把每一份时间卖出更多次这个怎么理解呢?比如作家郭敬明，他写一本小时代花了一整年的时间，但是他的书可以反复的出售，每多卖一本，他也不需要再付出更多时间了。那么他的一年时间就可以反复卖出多次。据说他的稿费都是以亿为单位的。 再比如，我们熟知的公号。咪蒙提到的，她的公号一条广告卖到65万。而papi酱的公号的第一条广告，卖出了2200万的高价。这两个人的公号一篇的阅读量都在百万以上甚至更高。而一篇阅读量在一千左右的公号文，只能带来几百块的广告收入，这就是量的差距。他们写文和运营所用时间可能相差不大，但大号往往带来超高的收入。更多的阅读量，更多的人看你的文章也就意味着，你的时间卖出了更多次。 第三种模式: 3. 把每一份时间按比率卖出这个就是我们常说的，投资理财了。普通人去买基金股票p2p产品，通过本金带来收益，而厉害的投资人，通过投资一些创业阶段的公司，或做一些精准的投资，带来更高的收益。本质上来说，就是钱生钱。有一些p2p的产品可以达到10%左右的年化收益率，也就是你一万块，一年就可以挣到一千的利息。如果你有一百万，一年就可以挣到十万块。你的时间不再是一个值而是一种比率。这种情况下你的时间价值随着本金的上升而不断上升。 这就是富人越来越富，穷人越来越穷的本质原因。富人靠着第二第三点，花更少的时间挣更多的钱，而穷人，贩卖越来越多的时间换取微薄的薪资。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[vim学习笔记]]></title>
      <url>%2F2017%2F04%2F16%2Fvim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[vim编辑器的三种模式：一般模式、编辑模式和命令行模式。 在一般模式中可以进行删除、复制和粘贴的功能，但是无法编辑文件内容。从一般模式切换到编辑模式可以按下i、I、o、O、a、A、r、R键。按下Esc键可以回到一般模式。在一般模式中输入：、/、？三个中的任意一个可以将光标移到最下面的一行。在这个模式中可以提供查找数据的操作，而读取、保存、大量替换字符、离开vii、显示行号等操作则是在此模式中完成的。需要注意的是，编辑模式与命令行模式之间是不能互相切换的。 快捷键配置插件参考文档Vim初级：配置和使用 如何用Vim搭建IDE？ Vundle：你必须了解的Linux Vim插件管理工具 【Linux入门学习之】vi/vim编辑器必知必会]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PHP学习相关资料]]></title>
      <url>%2F2017%2F04%2F09%2FPHP%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99%2F</url>
      <content type="text"><![CDATA[PHP之道http://laravel-china.github.io/php-the-right-way/http://phpbestpractices.justjavac.com/PHP 最佳实践 PHP Closure类详解 SPL SPL 全称是 Standard PHP Library手册 PHP: SPL - Manual PHP SPL 笔记PHP SPL（PHP 标准库）站在巨人的肩膀上写代码—SPL]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Laravel框架学习笔记]]></title>
      <url>%2F2017%2F04%2F09%2FLaravel%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[laravel 神奇的服务容器 Laravel官网Laravel学院Laravel China 社区Laravel 中文网 Laravel视频教程 Laravel 完整开源项目大全http://laravelacademy.org/laravel-project]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[YII框架学习笔记]]></title>
      <url>%2F2017%2F04%2F09%2FYII%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[2.0.11 版发布于 2017年02月01日 • 1.1.17 版发布于 2016年01月13日 学习计划1、通过视频学习操作并做好记录 入门视频教程魏曦教你学 - Yii2.0 视频教程 参考资料Yii英文官网Yii Framework中文网Yii中文网 开源项目YIIFCMS yiifcms是基于yii框架开发的内容管理系统(CMS)，功能强大，运行高效，稳定安全，是学习php和建站的良好选择。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[自定义使用Sublime Text 3]]></title>
      <url>%2F2017%2F04%2F09%2F%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BD%BF%E7%94%A8Sublime-Text-3%2F</url>
      <content type="text"><![CDATA[参考资料如何优雅地使用Sublime Text3]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[tmux：终端复用利器]]></title>
      <url>%2F2017%2F04%2F05%2Ftmux%EF%BC%9A%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8%E5%88%A9%E5%99%A8%2F</url>
      <content type="text"><![CDATA[tmux：终端复用利器 优雅地使用命令行：Tmux 终端复用 为什么使用 tmux http://www.cnblogs.com/itech/archive/2012/12/17/2822170.html 常用命令使用原理理解修改配置]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PHP依赖注入学习笔记]]></title>
      <url>%2F2017%2F04%2F04%2FPHP%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[参考资料 深入理解DIP、IoC、DI以及IoC容器 PHP程序员如何理解依赖注入容器(dependency injection container) 聊一聊PHP的依赖注入(DI) 和 控制反转(IoC) laravel 神奇的服务容器]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[创建一个自己的【Composer/Packagist】包]]></title>
      <url>%2F2017%2F04%2F04%2F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E3%80%90Composer-Packagist%E3%80%91%E5%8C%85%2F</url>
      <content type="text"><![CDATA[创建【Composer/Packagist】包有有以下几个步骤： 初始化composer.json文件 定义命名空间及包名 实现包需要实现的功能 提交到 GitHub 在Packagist注册包 TodoList 还有很多需要做的，我也只是在学习，学的越多，发现需要学的越多 代码优化 包加载调用库 学习到到内容 开发包测试 命名空间 composer自动加载 github中hook自动更新 项目地址 GitHub地址 参考资料 如何创建一个自己的【Composer/Packagist】包 动手开发自己的第一个 composer 包 composer之创建自己的包 通过 Composer Github Packagist制作发布共享PHP包]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Git常用操作记录]]></title>
      <url>%2F2017%2F04%2F04%2FGit%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95%2F</url>
      <content type="text"><![CDATA[常用操作命令Tag管理本地标签（tag）管理 打个标签（Tag），表示这是个可靠的可发布版本，默认的标签将打在最新的commit上。 1git tag -a v1.0 -m &quot;第一个里程碑的突破&quot; 查看打了哪些标签使用 1git tag 查看某个标签的信息用 1git show v1.0 删除标签 1git tag -d v1.0 远程标签管理把v1.0推送到远程，1git push origin v1.0 把所有的标签一次推送到远程更爽，1git push origin --tags 删除远程的标签，你可以到github上删除，也可以， 先删除本地的1git tag -d v1.0 删除远程的1git push origin :refs/tags/v1.0 参考资料教程 廖雪峰Git教程 博文 Git的版本和分支管理]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Composer学习笔记]]></title>
      <url>%2F2017%2F04%2F04%2FComposer%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[Composer 将这样为你解决问题： a) 你有一个项目依赖于若干个库。 b) 其中一些库依赖于其他库。 c) 你声明你所依赖的东西。 d) Composer 会找出哪个版本的包需要安装，并安装它们（将它们下载到你的项目中）。 参考网站 Composer 中文网站 Composer Hub 地址 Composer 官网 深入 Composer autoload 你所不知道的 PHP - 自动加载 利用 Composer 一步一步构建自己的 PHP 框架 FIG-PHP PSR规范系列4-自动加载 PHP中PSR-[0-4]代码规范 PHP 标准规范https://psr.phphub.org/ TodoList 通过文档学习使用 创建自己的仓库并安装使用 熟悉composer操作全过程以及相关参数 常见问题搜集]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Mac上常用工具]]></title>
      <url>%2F2017%2F04%2F01%2FMac%E4%B8%8A%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%2F</url>
      <content type="text"><![CDATA[「工欲善其事，必先利其器」 MacTips Mac 窗口管理器 目前使用SizeUp 窗口管理神器 SizeUp 试用：快捷键完成各种窗口变换 解放鼠标，用 SizeUp 快捷管理你的窗口 7 款 Mac 窗口管理利器推荐，任务再多也不乱 Mac 浏览器省电又流畅，电脑浏览器我只选 Safari | 有用功 Mac 壁纸最好的 Mac 壁纸应用，可能都在这里了]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Mac上Homebrew的使用]]></title>
      <url>%2F2017%2F04%2F01%2FMac%E4%B8%8Abrew%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[Homebrew又叫brew，是Mac OSX上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件， 只需要一个命令， 非常方便brew类似ubuntu系统下的apt-get的功能。Homebrew官网（多语言版本）简单明了地介绍了如何安装和使用这个工具，并提供了自己的Wiki。 Homebrew的使用安装Homebrew在Mac中打开终端输入命令：1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 使用Homebrew安装软件当brew安装成功后，就可以随意安装自己想要的软件了，例如wget，命令如下：1brew install wget 实际上，Homebrew将软件包分装到单独的目录（/usr/local/Cellar），然后 symlink 到 /usr/local/bin中。 使用brew卸载软件卸载的话，命令如下：1brew uninstall wget 使用brew搜索软件有时候，你不知道你安装的软件的名字， 那么你需要先搜索下, 查到包的名字。比如我要安装：1brew search /wge*/ /wge*/是个正则表达式， 需要包含在/中 其他brew命令 命令 描述 brew list 列出已安装的软件 brew update 更新brew brew home 用浏览器打开brew的官方网站 brew info 显示软件信息 brew deps 显示包依赖 参考资料 Mac上brew的使用 (Homebrew 使 OS X 更完整) mac安装brew 软件包管理工具Homebrew Homebrew总结 Homebrew 隐藏命令 Mac入门（三）使用brew安装软件]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[优雅使用jQuery]]></title>
      <url>%2F2017%2F03%2F29%2F%E4%BC%98%E9%9B%85%E4%BD%BF%E7%94%A8jQuery%2F</url>
      <content type="text"><![CDATA[结合《锋利的jQuery》学习，记录属于自己的知识。jQuery是一个轻量级的库，拥有强大的选择器，出色的DOM操作，可靠的事件处理、完善的兼容性和链式操作等功能。 jQuery代码编写入门 获取jQuery通过官网获取 编写简单的jQuery代码 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;jQuery01&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;script src=&quot;//cdn.bootcss.com/jquery/1.7.1/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(document).ready(function() &#123; alert(&quot;Hello World&quot;); &#125;); $(function() &#123; alert(&apos;tess&apos;); &#125;) $(document).ready(function () &#123; &#125;);&lt;/script&gt;&lt;/html&gt; window.onload和$(document).ready()的对比 jQuery对象和DOM对象 1、DOM(Document Object Model, 文档对象模型)，DOM对象可以使用JavaScript中的方法： 12var domObject = document.getElementById(&quot;id&quot;);var objHtml = domObj.innerHTML; 2、jQuery 对象就是通过jQuery包装DOM对象后产生的对象，jQuery 对象是jQuery 独有的。 3、jQuery对象和DOM对象的相互转换 123var $variable = jQuery对象；var variable = DOM对象； 1234567//jQuery对象-&gt;DOM对象var $cr = $(&quot;#cr&quot;);var cr = $cr[0];var cr = $cr.get(0);//jQuery对象&lt;-DOM对象var cr = document.getElementById(&quot;cr&quot;);var $cr = $(cr); 解决jQuery 和其他库的冲突 1、jQuery在其他库加载之后导入，可以在任何时候调用jQuery.noConflict()函数将变量$的控制权移交给其他JavaScript库。 2、自定义一个快捷方式 1var $j = jQuery.noConflict(); 3、将变量$的控制权让渡给prototype.js 123456jQuery.noConflict();jQuery(function($)&#123; //使用jQuery $(&quot;p&quot;).click(function()&#123; //继续使用 $ 方法 alert( $(this).text() ); &#125;);&#125;); 4、执行匿名函数且传递实参jQuery 12345678jQuery.noConflict(); //将变量$的控制权让渡给prototype.js(function($)&#123; //定义匿名函数并设置形参为$ $(function()&#123; //匿名函数内部的$均为jQuery $(&quot;p&quot;).click(function()&#123; //继续使用 $ 方法 alert($(this).text()); &#125;); &#125;);&#125;)(jQuery); //执行匿名函数且传递实参jQuery jQuery选择器 在jQuery中，对事件处理、遍历DOM和Ajax 操作都依赖于选择器。jQuery 选择器分为基本选择器，层次选择器、过滤选择器、表单选择器； 基本选择器 选择器 描述 返回 示例 #id 匹配给定的id 单个元素 $(“header”) .class 匹配给定的类名 集合元素 $(“.test”) E 匹配给定的标签名 集合元素 $(“div”) * 匹配所有元素 集合元素 $(“*’) E, .class, E… 匹配给定的集合 集合元素 $(“span, .tips”) 层次选择器 选择器 描述 返回 示例 $(“ancestor descendant”) 匹配 ancestor 里的所有descendant(后代)元素 集合元素 $(“body div”) $(“parent&gt;child”) 匹配 parent 下的所有child(子) 元素 集合元素 $(“div&gt;span”) $(“prev+next”) 匹配紧接在 prev 后的next 元素 集合元素 $(“.error+span”) $(“prev~siblings”) 匹配 prev 后的所有siblings 元素 集合元素 $(“span~a”) 可以用 过滤选择器表单选择器 选择器 描述 返回 示例 :input 匹配所有 input, textarea,select, button元素 集合元素 $(“input”) :text 匹配所有文本框 集合元素 $(“:text”) :password 匹配所有密码框 集合元素 $(“:password”) :radio 匹配所有单选框 集合元素 $(“:radio”) :checkbox 匹配所有所有多选框 集合元素 $(“:checkbox”) :submit 匹配所有提交按钮 集合元素 $(“:submit”) :image 匹配所有图像按钮 集合元素 $(“:image”) :reset 匹配所有重置按钮 集合元素 $(“:reset”) :button 匹配所有按钮 集合元素 $(“:button”) :file 匹配所有上传域 集合元素 $(“:file”) 编码规范链式操作 对于同一个对象不超过3个操作的，可以直接写成一行： 1$(&quot;li&quot;).show().unbind(&quot;click&quot;); 对于同一个对象的较多操作，建议每行写一个操作： 123456789$(this).removeClass(&quot;mouseout&quot;) .addClass(&quot;mouseover&quot;) .stop() .fadeTo(&quot;fast&quot;, 0.6) .fadeTo(&quot;fast&quot;, 1) .unbind(&quot;click&quot;) .click(function() &#123; //do something ... &#125;); 如果嫌代码行数过多，可以以功能块来换行。 对于多个对象的少量操作，可以每个对象写一行，如果涉及子元素，可以考虑适当缩进：1234$(this).addClass(&quot;highlight&quot;) .children(&quot;li&quot;).show().end().siblings().removeClass(&quot;highlight&quot;) .children(&quot;li&quot;).hide(); 参考资料书文章]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[技术栈]]></title>
      <url>%2F2017%2F03%2F28%2F%E6%8A%80%E6%9C%AF%E6%A0%88%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[求职之路与职业规划]]></title>
      <url>%2F2017%2F03%2F27%2F%E6%B1%82%E8%81%8C%E4%B9%8B%E8%B7%AF%E4%B8%8E%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%2F</url>
      <content type="text"><![CDATA[2017年PHP程序员未来路在何方-韩天峰]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建个人博客]]></title>
      <url>%2F2017%2F03%2F17%2FHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[添加Local Search功能安装 hexo-generator-searchdb,在你的站点文件夹中，用shell等运行下面这行代码：1$ npm install hexo-generator-searchdb --save 编辑站点配置文件添加以下字段12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件启用本地搜索123# Local searchlocal_search: enable: true 添加百度统计 注册并登陆百度统计 在网站中心–&gt;代码获取中点击复制代码 打开F:\Hexo\themes\pacman\layout\after_footer.ejs文件,把刚才复制的代码复制到最下面即可; 然后在网站中心–&gt;代码安装检查中检测代码是否添加成功 注意:因为主题用的不同,可能代码添加位置也不一样,但基本都是在/themes/yourtheme/layout/after_footer.ejs中添加即可]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F03%2F17%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
